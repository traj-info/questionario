<?php//-------------------------------------FJR Webdesign---------------------------------------// Arquivo: TSession.php// Versao: 1.0 - 20/04/2008// Autor: Francisco Jr// Descricao: Define a classe TSession.//-----------------------------------------------------------------------------------------// Log de modificacoes:// MODELO: vX.Y - DD/MM/AAAA - Autor - Modificacoes// TODO: adaptar codigo, retirando aspectos somente pertinentes a primeira versao do FJR System// v1.1 - 26/04/3008 - fjr - Implementadas funcoes Login(), Logout(), CheckAccessLevel();//      retirada utilizacao de SID//-----------------------------------------------------------------------------------------// Atencao! O conteudo deste arquivo nao pode ser modificado sem previa autorizacao// do desenvolvedor.// Copyright (C) 2008 FJR Webdesign. Todos os direitos reservados//-----------------------------------------------------------------------------------------// ---------------------------------------------------------------------------------------define("USERNAME_INVALID", "1");define("PASSWORD_INVALID", "2");class TSession extends TSystemComponent{    function TSession()     // constructor    {        }    // Check if username exists and, if so, if password matches    // Note: $password must be the same as stored in database (that is, password must be passed AFTER sha1())    function CheckData($username, $password)    {        $settings = TSystemComponent::GetSettings();        $db = new TDbConnector();        $db->SetDbName($settings['dbname']);        $query = "SELECT * FROM {$settings['users']} WHERE username = '$username'";        if(!$db->GetResult($query)) return USERNAME_INVALID;                $query = "SELECT * FROM {$settings['users']} WHERE username = '$username' AND password = '$password'";        if(!$db->GetResult($query)) return PASSWORD_INVALID;                return 0;    }        function CheckAccessLevel($min_required, $redirect=true)    {        if((!TSession::IsActive()) || ($_SESSION['s_access_level'] < $min_required))        {            if($redirect) TSystemComponent::TriggerAccessDenied();            return false;        }        else        {            return true;        }    }    function GetAccessLevel()    {		if(!($_SESSION['s_access_level'] > 0)) return 0;        return $_SESSION['s_access_level'];    }        function IsActive() // return true if there is an active session    {        return (($_SESSION['s_username'] <> "") && ($_SESSION['s_access_level'] > 0));    }        function GetUsername()    {        // FALTA        return "admin";    }        function Login($username)    {        $settings = TSystemComponent::GetSettings();        $db = new TDbConnector();        $db->SetDbName($settings['dbname']);        $query = "SELECT * FROM " . $settings['users'] . " WHERE username = '$username'";        $result = $db->GetResult($query);        if(!$result) return false;		if($result['inactive'] == 1) return false;        $_SESSION['s_username'] = $username;        $_SESSION['s_access_level'] = $result['access_level'];        $_SESSION['s_first_name'] = $result['first_name'];        $_SESSION['s_last_name'] = $result['last_name'];        $_SESSION['s_user_id'] = $result['id'];    }        function Logout()    {        session_destroy();    }}?>